package com.javarush.task.task15.task1522;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/* 
Закрепляем паттерн Singleton
*/

public class Solution {
    public static void main(String[] args) {
        System.out.println(thePlanet.toString());
    }

    public static Planet thePlanet;

    //add static block here - добавьте статический блок тут
    static {
        try {
            readKeyFromConsoleAndInitPlanet();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void readKeyFromConsoleAndInitPlanet() throws IOException {
        // implement step #5 here - реализуйте задание №5 тут
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

        String s = reader.readLine();

        if (s.equals(Planet.SUN)){
            thePlanet=Sun.getInstance();
        }else {
            if (s.equals(Planet.MOON)){
                thePlanet= Moon.getInstance();
            }else {
                if (s.equals(Planet.EARTH)){
                    thePlanet= Earth.getInstance();
                }else thePlanet=null;

            }}
    }
}

package com.javarush.task.task15.task1522;

public class Sun implements Planet {
    private static String name = Planet.SUN;
    private static Sun instance;

    private Sun() {
    }

    public static Sun getInstance(){
        if (instance == null){
            instance = new Sun();
            return instance;
        }
        return instance;
    }
    public String getName(){
        return name;
    }
    public void setName(String n){
        name = n;
    }



}

package com.javarush.task.task15.task1522;

public interface Planet {
    static String SUN = "sun";
    static String MOON = "moon";
    static String EARTH = "earth";
}
